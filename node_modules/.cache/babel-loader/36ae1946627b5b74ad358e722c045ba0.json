{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/e-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/e-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/e-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.mjs';\nimport { visualElement } from '../render/index.mjs';\nimport { animateVisualElement } from '../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nvar createObject = function createObject() {\n  return {};\n};\nvar stateVisualElement = visualElement({\n  build: function build() {},\n  measureViewportBox: createBox,\n  resetTransform: function resetTransform() {},\n  restoreTransform: function restoreTransform() {},\n  removeValueFromRenderState: function removeValueFromRenderState() {},\n  render: function render() {},\n  scrapeMotionValuesFromProps: createObject,\n  readValueFromInstance: function readValueFromInstance(_state, key, options) {\n    return options.initialState[key] || 0;\n  },\n  makeTargetAnimatable: function makeTargetAnimatable(element, _ref) {\n    var transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      target = _objectWithoutProperties(_ref, [\"transition\", \"transitionEnd\"]);\n    var origin = getOrigin(target, transition || {}, element);\n    checkTargetForNewValues(element, target, origin);\n    return _objectSpread({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  }\n});\nvar useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    animationState = _useState2[0],\n    setAnimationState = _useState2[1];\n  var visualState = useVisualState({}, false);\n  var element = useConstant(function () {\n    return stateVisualElement({\n      props: {},\n      visualState: visualState\n    }, {\n      initialState: initialState\n    });\n  });\n  useEffect(function () {\n    element.mount({});\n    return element.unmount;\n  }, [element]);\n  useEffect(function () {\n    element.setProps({\n      onUpdate: function onUpdate(v) {\n        setAnimationState(_objectSpread({}, v));\n      }\n    });\n  }, [setAnimationState, element]);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation];\n}\nexport { useAnimatedState };","map":null,"metadata":{},"sourceType":"module"}